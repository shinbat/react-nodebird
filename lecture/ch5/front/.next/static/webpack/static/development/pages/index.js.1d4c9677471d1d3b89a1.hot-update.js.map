{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.1d4c9677471d1d3b89a1.hot-update.js","sources":["webpack:///./components/PostForm.js"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST } from '../reducers/post';\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const { imagePaths, isAddingPost, postAdded } = useSelector(state => state.post);\n\n  useEffect(() => {\n    setText('');\n  }, [postAdded === true]);\n\n  const onSubmitForm = useCallback((e) => {\n    e.preventDefault();\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: {\n        content: text,\n      },\n    });\n  }, [text]);\n\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n\n  return (\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onSubmit={onSubmitForm}>\n      <Input.TextArea maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" value={text} onChange={onChangeText}/>\n      <div>\n        <input type=\"file\" multiple hidden />\n        <Button>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\" loading={isAddingPost}>짹짹</Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => (\n          <div key={v} style={{ display: 'inline-block' }}>\n            <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\n            <div>\n              <Button>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAHA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;AACA;AACA;;;;A","sourceRoot":""}